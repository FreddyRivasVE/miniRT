Condiciones mínimas que el proyecto debe cumplir.

Lo que quiere decir cada punto (resumido y explicado en argentino):

1. **miniLibX obligatoria**
   – Tenés que usarla sí o sí para abrir la ventana y mostrar la imagen.
   – Podés usar la que trae tu SO o la compilar desde las fuentes.

2. **Ventana fluida**
   – Si cambiás de ventana, minimizás o la movés, no se tiene que colgar ni cerrar mal.

3. **Objetos mínimos**
   – Plano, esfera y cilindro tienen que estar implementados sí o sí.

4. **Intersecciones correctas**
   – Tu raytracer debe calcular bien las intersecciones con los objetos, incluso si el rayo entra por dentro o si se ve desde adentro del objeto.

5. **Redimensionar objetos**
   – Tu código debe poder cambiar el diámetro de una esfera, o el ancho y alto de un cilindro.

6. **Transformaciones (traslación y rotación)**
   – Los objetos, luces y cámaras deben poder moverse y girarse (excepto esferas y luces puntuales, porque no tienen orientación).

7. **Luces**
   – Implementar al menos:

   * **Luz ambiente** (la base, para que nada quede completamente negro).
   * **Luz difusa** (la que depende del ángulo entre la luz y la superficie).
   * **Sombras duras** (cuando un objeto bloquea totalmente la luz).

8. **Display en ventana**
   – Tenés que mostrar la imagen en una ventana y manejar bien:

   * ESC → cerrar la ventana y terminar.
   * Botón rojo de la ventana → cerrar y terminar.
     – Recomiendan usar las imágenes de minilibX para dibujar.

9. **Archivo `.rt` como input**
   – Tu programa recibe como primer argumento un archivo de escena con extensión `.rt`.
   – En ese archivo:

   * Puede haber saltos de línea extra entre elementos.
   * Los campos pueden tener espacios extra.
   * El orden de los elementos no importa.
   * Los elementos con letra mayúscula (ej. `A` para ambient light, `C` para camera) solo pueden aparecer una vez.

---
---

[miniRT]
Clarification about resizing and transformations

Hi, I wanted to clarify a point regarding the miniRT project, specifically the requirements mentioned in the Subject:

"Your program must be able to resize the unique properties of objects: diameter for a sphere and the width and height for a cylinder.
Your program must be able to apply translation and rotation transformations to objects, lights, and cameras (except for spheres and lights that cannot be rotated)."

Currently, our code:

Resizing: already reads the diameter of spheres and the width/height of cylinders from the .rt file and stores them in the structures (radius and height), so resizing is fully supported.

Translation and rotation: the structures (center/origin for position, axis/normal/direction for orientation) are prepared to apply transformations in memory, but no transformations are applied automatically from the .rt file.

To make it clearer, we will leave this part of the code in the thread

We would like to confirm if this setup is sufficient to meet the Subject requirement, or if we need to implement explicit translation/rotation functions even if they are not used in the .rt file.

Thanks in advance for your clarification!